# GOLANG BASH
source $(dirname $BASH_SOURCE)/bash_util_functions

goenv_add() {
    if [ -z "$1" ]; then
        exit
    fi
    P=$1
    if [ -e "~/.gopath" ]; then
        if [ -z "$(cat ~/.gopath | grep ${P})" ]; then
            echo "${P}" >> ~/.gopath
        fi
    else
        echo "${P}" >> ~/.gopath
    fi
}

goenv_here() {
    TARGET=$1
    if [ -z "${TARGET}" ]; then
        TARGET=$(pwd)
    fi
    TARGET=$(followlink $TARGET)
    if [ -z "$GOPATH" ]; then
        GOPATH="${TARGET}"
    else
        GOPATH="${TARGET}"':'"$GOPATH"
    fi
    export GOPATH=$GOPATH
    goenv_where
}

goenv_reset() {
    GOPATH=""
    if [ -n "$(ls -A ~/.gopath 2>/dev/null)" ]; then
        GOPATH=$(cat ~/.gopath | tr '\n' ':' | sed 's/:$//')
    fi
    export GOPATH=${GOPATH}
}


goenv_where() {
    P="$(echo $GOPATH | sed 's/:/\n/g' )"
    echo "Current GOPATHS:"
    echo "$P"
}

goenv_help() {
    echo "Usage:"
    echo "goenv here [path]         add a temporary gopath"
    echo "goenv where               print out gopath"
    echo "goenv add [path]          add a permanent gopath"
    echo "goenv reset               remove all temporary gopath"
    echo "goenv                     create goenv and add it to temporary gopath"
}

goenv() {
    COMMAND=$1
    if [ "${COMMAND}" == "here" ]; then
        goenv_here $2
    elif [ "${COMMAND}" == "where" ]; then
        goenv_where
    elif [ "${COMMAND}" == "add" ]; then
        goenv_add $2
    elif [ "${COMMAND}" == "reset" ]; then
        goenv_reset $2
    else
        goenv_help
    fi
}

[ -n "$(which go)" ] && goenv_reset

if [ -n "$(which go)" ]; then
    alias gofmtyrself="find . -name '*.go' -exec go fmt {} \;"
fi
