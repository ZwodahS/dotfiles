
C_RED=$(tput setaf 1)
C_GREEN=$(tput setaf 2)
C_YELLOW=$(tput setaf 3)
C_BLUE=$(tput setaf 4)
C_MAGENTA=$(tput setaf 5)
C_CYAN=$(tput setaf 6)
C_WHITE=$(tput setaf 7)
C_CLEAR=$(tput sgr0)

parse_git_user ()
{
    if git rev-parse --git-dir >/dev/null 2>&1
    then
        USERNAME=$(git config user.name)
        EMAIL=$(git config user.email)
        if [ -z "$USERNAME" ]; then
            return 0
        fi

        USER=${C_GREEN}
        USER+=$USERNAME
        if [ -n "$EMAIL" ]; then
            USER+=${C_CYAN}
            USER+="("
            USER+=$EMAIL
            USER+=")"
        fi
        USER+=${C_CLEAR}
        USER+="@"
        echo -e $USER
    else
           return 0
    fi
}

parse_git_branch ()
{
    if git rev-parse --git-dir >/dev/null 2>&1
    then
        gitver+=$(git branch 2>/dev/null| sed -n '/^\*/s/^\* //p')
    else
        return 0
    fi
    echo -e $gitver
}

branch_color ()
{
    if git rev-parse --git-dir >/dev/null 2>&1
    then
        color=""
        if git diff --quiet 2>/dev/null >&2
        then
                color="${C_GREEN}"
        else
                color=${C_RED}
        fi
    else
        return 0
    fi
    echo -ne $color
}

get_hostname ()
{
    if [ -e ~/.dotfiles/hostname ]; then
        echo ${C_RED}"@"${C_YELLOW}$(cat ~/.dotfiles/hostname)${C_CLEAR}
    else
        echo ""
    fi
}

get_time ()
{
    echo "[${C_BLUE}$(date +'%d-%b-%G@%k:%M:%S')${C_CLEAR}]"
}

PS1='${C_RED}#${C_CLEAR}[\[${C_BLUE}\]\w\[${C_CLEAR}\]] [${C_GREEN}\u${C_CLEAR}$(get_hostname)] [\[$(parse_git_user)$(branch_color)\]$(parse_git_branch)\[${C_CLEAR}\]]${C_RED}#${C_CLEAR} $(get_time)\n- '

alias g=git
